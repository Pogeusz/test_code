import json
import pandas as pd

def load_json(file_path):
    with open(file_path, 'r') as file:
        data = json.load(file)
    return data

def search_keys(data, search_value):
    found_keys = []
    if isinstance(data, dict):
        for key in data.keys():
            if search_value in key:
                found_keys.append(key)
    return found_keys

def compare_keys(keys1, keys2):
    comparison = []
    all_keys = set(keys1).union(set(keys2))
    for key in all_keys:
        in_first = key in keys1
        in_second = key in keys2
        comparison.append({
            'Key': key,
            'In First Search': in_first,
            'In Second Search': in_second
        })
    return comparison

def create_comparison_table(comparison):
    df = pd.DataFrame(comparison)
    return df

def main(json_file, search_value_1, search_value_2):
    data = load_json(json_file)
    
    if "standard_role_bindings" not in data:
        raise ValueError("'standard_role_bindings' key not found in the provided JSON file.")
    
    role_bindings_data = data["standard_role_bindings"]
    
    keys1 = search_keys(role_bindings_data, search_value_1)
    keys2 = search_keys(role_bindings_data, search_value_2)
    
    comparison = compare_keys(keys1, keys2)
    
    comparison_table = create_comparison_table(comparison)
    
    return comparison_table

# Example usage:
# json_file_path = 'example.json'
# search_value_1 = 'value1'
# search_value_2 = 'value2'
# result_table = main(json_file_path, search_value_1, search_value_2)
# print(result_table)